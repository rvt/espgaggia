; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = native

[gaggia_env]
lib_deps =
  PubSubClient@^2.8
  https://github.com/rvt/opt-parser
  https://github.com/rvt/statemachine
  https://github.com/rvt/scriptrunner#develop
  https://github.com/zerokol/eFLL
  https://github.com/tzapu/WiFiManager
  ;https://github.com/prampec/IotWebConf
  bblanchon/StreamUtils @ ^1.6.0
  https://github.com/RobTillaart/MAX31855_RT
  lvgl/lvgl@7.11.0

[env:gaggia]
platform = espressif32
framework = arduino
board_build.mcu = esp32
board_build.f_cpu = 240000000L
board = esp32dev
board_build.partitions = min_spiffs.csv
upload_resetmethod = nodemcu
#upload_protocol = espota
board_build.flash_mode = dout
build_type = debug
upload_speed = 115200 
build_flags =
  -D LV_CONF_INCLUDE_SIMPLE
  -I src
  -Os
  ; Use 32-bits build when possible, for correct memory stat display. You need
  ; `:i386` sdl2 libs installed. Comment this option for 64-bits build.
  ;!python -c "import platform; print('-m32' if platform.system() in [ 'Linux' ] else '')"
  ; Add recursive dirs for hal headers search
  ;!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"

; Visual LEDS on screen to see what the machine is doing, handle for testing..
  -D GUI_IO=y
; Active buttons (on the led) for brew/steam.. Handly for debugging
;  -D GUI_BUTTONS=y
; When set, we do not wait for temperatures, handle for debugging scripts where you want to keep the machine cold
;  -D DONT_WAIT_FOR_TEMPS=y
  -D DISPLAY_TASK_IN_MAIN_LOOP=y
  -D SHOW_FREE_HEAP=0
  -D LV_LVGL_H_INCLUDE_SIMPLE=y
  -D CONFIG_IDF_TARGET_ESP32=y
;  -D CONFIG_LV_USE_PERF_MONITOR=y
  -D CONFIG_LV_PREDEFINED_DISPLAY_NONE=y
  -D CONFIG_LV_DISPLAY_ORIENTATION=0
  -D CONFIG_LV_DISPLAY_WIDTH=240
  -D CONFIG_LV_DISPLAY_HEIGHT=320
  -D CONFIG_LV_TOUCH_X_MIN=200
  -D CONFIG_LV_TOUCH_Y_MIN=120
  -D CONFIG_LV_TOUCH_X_MAX=1900
  -D CONFIG_LV_TOUCH_Y_MAX=1900
  -D CONFIG_LV_TOUCH_XY_SWAP=1
;  -D CONFIG_LV_TOUCH_INVERT_X=1
  -D CONFIG_LV_TOUCH_INVERT_Y=1
; Display SPI SPI3/VSPI
; https://docs.espressif.com/projects/esp-idf/en/latest/esp32/api-reference/peripherals/spi_master.html
  -D CONFIG_LV_TFT_DISPLAY_CONTROLLER_ILI9341=y
  -D CONFIG_LV_TOUCH_CONTROLLER_XPT2046=y
  -D CONFIG_LV_TOUCH_CONTROLLER=1
#  -D CONFIG_LV_TFT_USE_CUSTOM_SPI_CLK_DIVIDER=n
#  -D CONFIG_LV_TFT_CUSTOM_SPI_CLK_DIVIDER=2
  -D CONFIG_LV_TOUCH_DRIVER_PROTOCOL_SPI=y
  -D CONFIG_LV_TFT_DISPLAY_PROTOCOL_SPI=y
  -D CONFIG_LV_TOUCH_CONTROLLER_SPI_VSPI=y
  -D CONFIG_LV_TFT_DISPLAY_SPI_VSPI=Y
  -D CONFIG_LV_TOUCH_DETECT_IRQ_PRESSURE=1
  -D CONFIG_LV_TOUCH_DETECT_PRESSURE=1
; Backlight turn on and uses a pin
  -D CONFIG_LV_ENABLE_BACKLIGHT_CONTROL=1
  -D CONFIG_LV_BACKLIGHT_ACTIVE_LVL=1
; Display 19 not used?
  -D CONFIG_LV_DISP_SPI_MISO=19
  -D CONFIG_LV_DISP_SPI_MOSI=23
  -D CONFIG_LV_DISP_SPI_CLK=18
  -D CONFIG_LV_DISP_SPI_CS=5
  -D CONFIG_LV_DISP_PIN_DC=2
  -D CONFIG_LV_DISP_PIN_RST=4    
  -D CONFIG_LV_DISP_PIN_BCKL=21  
; Touch display uses SPI from display
  -D CONFIG_LV_TOUCH_SPI_MISO=19
  -D CONFIG_LV_TOUCH_SPI_MOSI=23
  -D CONFIG_LV_TOUCH_SPI_CLK=18
  -D CONFIG_LV_TOUCH_SPI_CS=15
; was 26
  -D CONFIG_LV_TOUCH_PIN_IRQ=27
; Periferal sensors SPI2/HSPI (Temp/Touch) sensor
  -D CONFIG_PERI_PIN_SPI_MISO=12
;  -D CONFIG_PERI_PIN_SPI_MOSI=13
  -D CONFIG_PERI_PIN_SPI_CLK=14
; Temperature sensor CS uses SPI from periferal
; was 27
  -D CONFIG_BREW_PIN_SPI_CS=26
  -D CONFIG_STEAM_PIN_SPI_CS=22
; SSR Control
  -D CONFIG_SSR_VALVE_PIN=25
  -D CONFIG_SSR_BOILER_PIN=33
  -D CONFIG_SSR_PUMP_PIN=32
; Front Buttons
  -D CONFIG_STEAM_BUTTON_PIN=17
  -D CONFIG_BREW_BUTTON_PIN=16
  -D CONFIG_MILLIS_INCLUDE=\'<Arduino.h>\'
  -D CONFIG_MILLIS_TIME_EXPR=\'millis()\'
lib_deps =
    ${gaggia_env.lib_deps}
lib_ignore =
    LiquidCrystal
src_filter =
  +<*>
  +<ui>
